import streamlit as st
import tensorflow as tf
from tensorflow.keras.preprocessing import image
import numpy as np
from PIL import Image

def preprocess_images(path):
    img = image.load_img(path, target_size=(224, 224))
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_preprocessed = img_array / 255.0
    return img_preprocessed

loaded_model = tf.keras.models.load_model(r"PandasBears.h5")


st.title("Image Classification")
st.write("Upload an image for prediction.")

# Allow the user to upload an image
uploaded_file = st.file_uploader("Choose an image file", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    # Preprocess the uploaded image
    img = Image.open(uploaded_file)
    img_path = f"temp_image{uploaded_file.name}"
    img.save(img_path)
    img_preprocessed = preprocess_images(img_path)

    # Make the prediction
    prediction = loaded_model.predict(img_preprocessed)
    predicted_class_index = np.argmax(prediction)
    class_labels = ['bear', 'panda'] # Replace with your actual class labels
    predicted_class_label = class_labels[predicted_class_index]

    # Display the uploaded image and prediction
    st.image(img)
    st.write("Predicted class:", predicted_class_label)
